{"version":3,"sources":["components/Card.js","components/CardList.js","components/SearchBox.js","components/Scroll.js","containers/App.js","reportWebVitals.js","index.js"],"names":["Card","props","name","email","id","className","alt","src","CardList","robots","map","user","i","SearchBox","searchfield","searchChange","type","placeholder","onChange","Scroll","style","overflowY","border","height","children","App","onSearchChange","event","setState","target","value","state","fetch","then","response","json","users","this","filteredRobots","filter","robot","toLowerCase","includes","length","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById"],"mappings":"qMAeeA,EAbF,SAACC,GAAW,IAChBC,EAAmBD,EAAnBC,KAAMC,EAAaF,EAAbE,MAAOC,EAAMH,EAANG,GACrB,OACC,sBAAKC,UAAU,uCAAf,UACC,qBAAKC,IAAI,SAASC,IAAG,+BAA0BH,EAA1B,aACrB,gCACC,6BAAKF,IACL,4BAAIC,WCaOK,EAnBE,SAAC,GAAgB,IAAdC,EAAa,EAAbA,OACnB,OACC,8BAEGA,EAAOC,KAAI,SAACC,EAAMC,GACd,OACL,cAAC,EAAD,CAECR,GAAIK,EAAOG,GAAGR,GACdF,KAAMO,EAAOG,GAAGV,KAChBC,MAAOM,EAAOG,GAAGT,OAHZS,SCIKC,EAZG,SAAC,GAAgC,EAA/BC,YAAgC,IAAnBC,EAAkB,EAAlBA,aAChC,OACC,qBAAKV,UAAU,MAAf,SACA,uBACAA,UAAU,kBACTW,KAAK,SACLC,YAAY,gBACZC,SAAUH,OCCEI,G,MARA,SAAClB,GACf,OACC,qBAAKmB,MAAO,CAAEC,UAAW,SAAUC,OAAQ,kBAAmBC,OAAQ,SAAtE,SACCtB,EAAMuB,aCsCOC,E,kDApCf,aAAe,IAAD,8BACb,gBAWDC,eAAiB,SAACC,GACjB,EAAKC,SAAS,CAAEd,YAAaa,EAAME,OAAOC,SAX1C,EAAKC,MAAQ,CACZtB,OAAQ,GACRK,YAAa,IAJD,E,gEAOM,IAAD,OACnBkB,MAAM,8CACLC,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UACzBF,MAAK,SAAAG,GAAK,OAAI,EAAKR,SAAS,CAAEnB,OAAQ2B,S,+BAM9B,IAAD,EACwBC,KAAKN,MAA7BtB,EADA,EACAA,OAAQK,EADR,EACQA,YACVwB,EAAiB7B,EAAO8B,QAAO,SAAAC,GACpC,OAAOA,EAAMtC,KAAKuC,cAAcC,SAAS5B,EAAY2B,kBAEtD,OAAQhC,EAAOkC,OAGd,sBAAKtC,UAAU,KAAf,UACC,6CACA,cAAC,EAAD,CAAWU,aAAcsB,KAAKX,iBAC9B,cAAC,EAAD,UACA,cAAC,EAAD,CAAUjB,OAAQ6B,SANpB,6C,GAvBgBM,aCMHC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBd,MAAK,YAAkD,IAA/Ce,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,O,MCAdO,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,SAMjDX,M","file":"static/js/main.a1f8f250.chunk.js","sourcesContent":[" import React from 'react';\n\nconst Card = (props) => {\n\tconst { name, email, id } =props;\n\treturn (\n\t\t<div className='tc dib br3 pa3 ma2 grow bw2 shadow-5'>\n\t\t\t<img alt='robots' src={`https://robohash.org/${id}200x200`} />\n\t\t\t<div>\n\t\t\t\t<h2>{name}</h2>\n\t\t\t\t<p>{email}</p>\n\t\t\t</div>\n\t\t</div>\n\t\t);\n}\n\nexport default Card;","import React from 'react';\nimport Card from './Card';\n\nconst CardList = ({ robots }) => {\n\treturn(\n\t\t<div>\n\t\t    {\n\t\t\t  robots.map((user, i) => {\n\t\t       return (\n\t\t\t\t<Card\n\t\t\t\t key={i}\n\t\t\t\t id={robots[i].id}\n\t\t\t\t name={robots[i].name} \n\t\t\t\t email={robots[i].email}\n\t\t\t\t />\n\t\t\t);\n\t\t})\n\t}\n\t\t</div>\n\t);\n}\n\nexport default CardList;","import React from 'react';\n\nconst SearchBox = ({searchfield, searchChange}) => {\n\treturn (\n\t\t<div className='pa2'>\n\t\t<input\n\t\tclassName='pa3 ba b--green'\n\t\t type='search'\n\t\t placeholder='search robots'\n\t\t onChange={searchChange}\n\t\t />\n\t\t </div>\n\t\t);\n}\nexport default SearchBox;","import React from 'react';\n\nconst Scroll = (props) => {\n\treturn (\n\t\t<div style={{ overflowY: 'scroll', border: '1px solid black', height: '500px'}}>\n\t\t{props.children}\n\t\t</div>\n\t\t);\n};\n\nexport default Scroll;"," import React, {Component} from 'react';\nimport CardList from '../components/CardList';\nimport SearchBox from'../components/SearchBox';\nimport './App.css';\nimport Scroll from'../components/Scroll';\n\nclass App extends Component {\n\tconstructor() {\n\t\tsuper()\n\t\tthis.state = {\n\t\t\trobots: [],\n\t\t\tsearchfield: ''\n\t\t}\n\t}\ncomponentDidMount() {\n\tfetch('https://jsonplaceholder.typicode.com/users')\n\t.then(response => response.json())\n\t\t.then(users => this.setState({ robots: users }));\n}\n\tonSearchChange = (event) => {\n\t\tthis.setState({ searchfield: event.target.value })\n\t}\n\n\trender() {\n\t\tconst { robots, searchfield } = this.state;\n\t\tconst filteredRobots = robots.filter(robot =>{\n\t\t\treturn robot.name.toLowerCase().includes(searchfield.toLowerCase());\n\t\t})\n\t\treturn !robots.length ?\n\t\t<h1>Loading</h1> :\n     (\n \t\t<div className='tc'>\n \t\t\t<h1>Robofriends</h1>\n \t\t\t<SearchBox searchChange={this.onSearchChange}/>\n \t\t\t<Scroll>\n \t\t\t<CardList robots={filteredRobots}/>\n \t\t\t</Scroll>\n \t\t</div>\n \t);\n }\n}\n\n\n export default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n// import './index.css';\nimport  App from './containers/App';\nimport reportWebVitals from './reportWebVitals';\nimport 'tachyons';\n\nReactDOM.render(<App />, document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}